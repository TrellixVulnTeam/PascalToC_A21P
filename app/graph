digraph {
	node [height=0.1 shape=box]
	edge [arrowsize=0.5]
	node1 [label=Program]
	node2 [label=FuncImpl]
	node1 -> node2
	node3 [label="Type : char"]
	node2 -> node3
	node4 [label="Id : cifra_stotina"]
	node2 -> node4
	node5 [label=Params]
	node2 -> node5
	node6 [label=Decl]
	node5 -> node6
	node7 [label="Type : char"]
	node6 -> node7
	node8 [label="Id : s"]
	node6 -> node8
	node9 [label=Block]
	node2 -> node9
	node10 [label=If]
	node9 -> node10
	node11 [label="BinOp : <"]
	node10 -> node11
	node12 [label=FuncCall]
	node11 -> node12
	node13 [label="Id : ord"]
	node12 -> node13
	node14 [label=Args]
	node12 -> node14
	node15 [label="Id : s"]
	node14 -> node15
	node16 [label="Int : 100"]
	node11 -> node16
	node17 [label=Block]
	node10 -> node17
	node18 [label=Exit]
	node17 -> node18
	node19 [label="Char : 0"]
	node18 -> node19
	node20 [label=Else]
	node10 -> node20
	node21 [label=Block]
	node20 -> node21
	node22 [label=Exit]
	node21 -> node22
	node23 [label=FuncCall]
	node22 -> node23
	node24 [label="Id : chr"]
	node23 -> node24
	node25 [label=Args]
	node23 -> node25
	node26 [label="BinOp : +"]
	node25 -> node26
	node27 [label=FuncCall]
	node26 -> node27
	node28 [label="Id : ord"]
	node27 -> node28
	node29 [label=Args]
	node27 -> node29
	node30 [label="Char : 0"]
	node29 -> node30
	node31 [label="BinOp : div"]
	node26 -> node31
	node32 [label=FuncCall]
	node31 -> node32
	node33 [label="Id : ord"]
	node32 -> node33
	node34 [label=Args]
	node32 -> node34
	node35 [label="Id : s"]
	node34 -> node35
	node36 [label="Int : 100"]
	node31 -> node36
	node37 [label=FuncImpl]
	node1 -> node37
	node38 [label="Type : char"]
	node37 -> node38
	node39 [label="Id : cifra_desetica"]
	node37 -> node39
	node40 [label=Params]
	node37 -> node40
	node41 [label=Decl]
	node40 -> node41
	node42 [label="Type : char"]
	node41 -> node42
	node43 [label="Id : s"]
	node41 -> node43
	node44 [label=Block]
	node37 -> node44
	node45 [label=If]
	node44 -> node45
	node46 [label="BinOp : <"]
	node45 -> node46
	node47 [label=FuncCall]
	node46 -> node47
	node48 [label="Id : ord"]
	node47 -> node48
	node49 [label=Args]
	node47 -> node49
	node50 [label="Id : s"]
	node49 -> node50
	node51 [label="Int : 10"]
	node46 -> node51
	node52 [label=Block]
	node45 -> node52
	node53 [label=Exit]
	node52 -> node53
	node54 [label="Char : 0"]
	node53 -> node54
	node55 [label=Else]
	node45 -> node55
	node56 [label=Block]
	node55 -> node56
	node57 [label=Exit]
	node56 -> node57
	node58 [label=FuncCall]
	node57 -> node58
	node59 [label="Id : chr"]
	node58 -> node59
	node60 [label=Args]
	node58 -> node60
	node61 [label="BinOp : +"]
	node60 -> node61
	node62 [label=FuncCall]
	node61 -> node62
	node63 [label="Id : ord"]
	node62 -> node63
	node64 [label=Args]
	node62 -> node64
	node65 [label="Char : 0"]
	node64 -> node65
	node66 [label="BinOp : mod"]
	node61 -> node66
	node67 [label="BinOp : div"]
	node66 -> node67
	node68 [label=FuncCall]
	node67 -> node68
	node69 [label="Id : ord"]
	node68 -> node69
	node70 [label=Args]
	node68 -> node70
	node71 [label="Id : s"]
	node70 -> node71
	node72 [label="Int : 10"]
	node67 -> node72
	node73 [label="Int : 10"]
	node66 -> node73
	node74 [label=FuncImpl]
	node1 -> node74
	node75 [label="Type : char"]
	node74 -> node75
	node76 [label="Id : cifra_jedinica"]
	node74 -> node76
	node77 [label=Params]
	node74 -> node77
	node78 [label=Decl]
	node77 -> node78
	node79 [label="Type : char"]
	node78 -> node79
	node80 [label="Id : s"]
	node78 -> node80
	node81 [label=Block]
	node74 -> node81
	node82 [label=Exit]
	node81 -> node82
	node83 [label=FuncCall]
	node82 -> node83
	node84 [label="Id : chr"]
	node83 -> node84
	node85 [label=Args]
	node83 -> node85
	node86 [label="BinOp : +"]
	node85 -> node86
	node87 [label=FuncCall]
	node86 -> node87
	node88 [label="Id : ord"]
	node87 -> node88
	node89 [label=Args]
	node87 -> node89
	node90 [label="Char : 0"]
	node89 -> node90
	node91 [label="BinOp : mod"]
	node86 -> node91
	node92 [label=FuncCall]
	node91 -> node92
	node93 [label="Id : ord"]
	node92 -> node93
	node94 [label=Args]
	node92 -> node94
	node95 [label="Id : s"]
	node94 -> node95
	node96 [label="Int : 10"]
	node91 -> node96
	node97 [label=LocalVars]
	node1 -> node97
	node98 [label=StringDecl]
	node97 -> node98
	node99 [label="Type : string"]
	node98 -> node99
	node100 [label="Id : s"]
	node98 -> node100
	node101 [label="Int : 255"]
	node98 -> node101
	node102 [label=StringDecl]
	node97 -> node102
	node103 [label="Type : string"]
	node102 -> node103
	node104 [label="Id : t"]
	node102 -> node104
	node105 [label="Int : 255"]
	node102 -> node105
	node106 [label=Decl]
	node97 -> node106
	node107 [label="Type : char"]
	node106 -> node107
	node108 [label="Id : ascii"]
	node106 -> node108
	node109 [label=Decl]
	node97 -> node109
	node110 [label="Type : char"]
	node109 -> node110
	node111 [label="Id : tmp"]
	node109 -> node111
	node112 [label=Decl]
	node97 -> node112
	node113 [label="Type : integer"]
	node112 -> node113
	node114 [label="Id : i"]
	node112 -> node114
	node115 [label=Decl]
	node97 -> node115
	node116 [label="Type : integer"]
	node115 -> node116
	node117 [label="Id : j"]
	node115 -> node117
	node118 [label=Decl]
	node97 -> node118
	node119 [label="Type : integer"]
	node118 -> node119
	node120 [label="Id : len"]
	node118 -> node120
	node121 [label=Block]
	node1 -> node121
	node122 [label=ProcCall]
	node121 -> node122
	node123 [label="Id : readln"]
	node122 -> node123
	node124 [label=Args]
	node122 -> node124
	node125 [label="Id : s"]
	node124 -> node125
	node126 [label=Assign]
	node121 -> node126
	node127 [label="Id : i"]
	node126 -> node127
	node128 [label="Int : 1"]
	node126 -> node128
	node129 [label=Assign]
	node121 -> node129
	node130 [label="Id : j"]
	node129 -> node130
	node131 [label="Int : 1"]
	node129 -> node131
	node132 [label=Assign]
	node121 -> node132
	node133 [label="Id : len"]
	node132 -> node133
	node134 [label=FuncCall]
	node132 -> node134
	node135 [label="Id : length"]
	node134 -> node135
	node136 [label=Args]
	node134 -> node136
	node137 [label="Id : s"]
	node136 -> node137
	node138 [label=While]
	node121 -> node138
	node139 [label="BinOp : <="]
	node138 -> node139
	node140 [label="Id : i"]
	node139 -> node140
	node141 [label="Id : len"]
	node139 -> node141
	node142 [label=Block]
	node138 -> node142
	node143 [label=Assign]
	node142 -> node143
	node144 [label="Id : ascii"]
	node143 -> node144
	node145 [label=ArrayElem]
	node143 -> node145
	node146 [label="Id : s"]
	node145 -> node146
	node147 [label="Id : i"]
	node145 -> node147
	node148 [label=ProcCall]
	node142 -> node148
	node149 [label="Id : inc"]
	node148 -> node149
	node150 [label=Args]
	node148 -> node150
	node151 [label="Id : i"]
	node150 -> node151
	node152 [label=Assign]
	node142 -> node152
	node153 [label="Id : tmp"]
	node152 -> node153
	node154 [label=FuncCall]
	node152 -> node154
	node155 [label="Id : cifra_stotina"]
	node154 -> node155
	node156 [label=Args]
	node154 -> node156
	node157 [label="Id : ascii"]
	node156 -> node157
	node158 [label=If]
	node142 -> node158
	node159 [label="BinOp : or"]
	node158 -> node159
	node160 [label="BinOp : <>"]
	node159 -> node160
	node161 [label="Id : tmp"]
	node160 -> node161
	node162 [label="Char : 0"]
	node160 -> node162
	node163 [label="BinOp : and"]
	node159 -> node163
	node164 [label="BinOp : ="]
	node163 -> node164
	node165 [label="Id : tmp"]
	node164 -> node165
	node166 [label="Char : 0"]
	node164 -> node166
	node167 [label="BinOp : >"]
	node163 -> node167
	node168 [label="Id : j"]
	node167 -> node168
	node169 [label="Int : 1"]
	node167 -> node169
	node170 [label=Block]
	node158 -> node170
	node171 [label=ProcCall]
	node170 -> node171
	node172 [label="Id : insert"]
	node171 -> node172
	node173 [label=Args]
	node171 -> node173
	node174 [label="Id : tmp"]
	node173 -> node174
	node175 [label="Id : t"]
	node173 -> node175
	node176 [label="Id : j"]
	node173 -> node176
	node177 [label=ProcCall]
	node170 -> node177
	node178 [label="Id : inc"]
	node177 -> node178
	node179 [label=Args]
	node177 -> node179
	node180 [label="Id : j"]
	node179 -> node180
	node181 [label=ProcCall]
	node142 -> node181
	node182 [label="Id : insert"]
	node181 -> node182
	node183 [label=Args]
	node181 -> node183
	node184 [label=FuncCall]
	node183 -> node184
	node185 [label="Id : cifra_desetica"]
	node184 -> node185
	node186 [label=Args]
	node184 -> node186
	node187 [label="Id : ascii"]
	node186 -> node187
	node188 [label=WriteArg]
	node183 -> node188
	node189 [label="Id : t"]
	node188 -> node189
	node190 [label=WriteArg]
	node183 -> node190
	node191 [label="Id : j"]
	node190 -> node191
	node192 [label=ProcCall]
	node142 -> node192
	node193 [label="Id : inc"]
	node192 -> node193
	node194 [label=Args]
	node192 -> node194
	node195 [label="Id : j"]
	node194 -> node195
	node196 [label=ProcCall]
	node142 -> node196
	node197 [label="Id : insert"]
	node196 -> node197
	node198 [label=Args]
	node196 -> node198
	node199 [label=FuncCall]
	node198 -> node199
	node200 [label="Id : cifra_jedinica"]
	node199 -> node200
	node201 [label=Args]
	node199 -> node201
	node202 [label="Id : ascii"]
	node201 -> node202
	node203 [label=WriteArg]
	node198 -> node203
	node204 [label="Id : t"]
	node203 -> node204
	node205 [label=WriteArg]
	node198 -> node205
	node206 [label="Id : j"]
	node205 -> node206
	node207 [label=ProcCall]
	node142 -> node207
	node208 [label="Id : inc"]
	node207 -> node208
	node209 [label=Args]
	node207 -> node209
	node210 [label="Id : j"]
	node209 -> node210
	node211 [label=ProcCall]
	node121 -> node211
	node212 [label="Id : write"]
	node211 -> node212
	node213 [label=Args]
	node211 -> node213
	node214 [label=WriteArg]
	node213 -> node214
	node215 [label="Id : t"]
	node214 -> node215
}
